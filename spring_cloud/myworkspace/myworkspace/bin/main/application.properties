server.port=9090

eureka.client.service-url.default-zone=http://localhost:8761/eureka/

spring.servlet.multipart.max-file-size=-1
spring.servlet.multipart.max-request-size=-1

spring.datasource.hikari.driver-class-name=com.mysql.cj.jdbc.Driver
# insight -> myworkspace로 변경
spring.datasource.hikari.jdbc-url: jdbc:mysql://mysql.ccr9jfko1h0g.ap-northeast-2.rds.amazonaws.com:3306/myworkspace?rewriteBatchedStatements=true&useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC
spring.datasource.hikari.username=sqluser
spring.datasource.hikari.password=password123
spring.datasource.hikari.connection-test-query=SELECT 1

# jpa(java persistent api)
# java 객체를 데이터베이스 저장 관리하는 방법을 제공
# persitent -> 변수/객체와 같은 메모리에만 저장되는 데이터를 파일/데이터베이스 등에 저장 관리하는 방법
# api(application programming interface)
# -> 프로그램 개방 방식에 대한 정의
spring.jpa.database=mysql
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
# jpa == hibernate
# 이름전략 - 물리 데이터베이스(snake case) <-> 자바 객체(camel case)
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.EJB3NamingStrategy
# DDL(Data Definition Lanaguage)k
# CREATE, ALTER.....
# JPA 객체 구성에 필요한 데이터베이스 객체를 자동으로 생성해줌
spring.jpa.generate-ddl=true
# mysql autoincrement 방식을 쓸 때는 false로 지정함
spring.jpa.hibernate.user-new-id-generator-mappings=false

spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.format_sql=true

# 자세한 DB 통계정보 확인
spring.jpa.properties.hibernate.generate_statistics=true
# batch 처리
spring.jpa.properties.hibernate.jdbc.batch_size=5
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true



